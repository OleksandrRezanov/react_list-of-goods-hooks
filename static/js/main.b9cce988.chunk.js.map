{"version":3,"sources":["types/SortType.ts","App.tsx","index.tsx"],"names":["SortType","goodsFromServer","sortByDefault","method","default","isReversedOrder","App","useState","sortBy","setSortBy","goods","list","preparedGoods","sort","good1","good2","alphabet","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,kFAAAA,K,oBAAAA,E,gBAAAA,E,YAAAA,M,gBCMCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA8B,CAClCC,OAAQH,EAASI,QACjBC,iBAAiB,GA+BNC,EAAgB,WAC3B,MAA4BC,mBAASL,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KACMC,EA9BiB,SACvBC,EADuB,GAGnB,IADFR,EACC,EADDA,OAAQE,EACP,EADOA,gBAEJO,EAAa,YAAOD,GAqB1B,OAnBIR,GACFS,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQZ,GACN,KAAMH,EAASgB,SACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAMf,EAASkB,OACb,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXb,GACFO,EAAcO,UAGTP,EAKOQ,CAAiBnB,EAAiBO,GAEhD,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAU,2BAAKD,GAAN,IAAcL,OAAQH,EAASgB,aACvDO,KAAK,SACLF,UACEG,IACE,SACA,UACA,CACE,WAAYhB,EAAOL,SAAWH,EAASgB,WAR/C,iCAgBA,wBACEM,QAAS,kBAAMb,EAAU,2BAAKD,GAAN,IAAcL,OAAQH,EAASkB,WACvDK,KAAK,SACLF,UACEG,IACE,SACA,aACA,CACE,WAAYhB,EAAOL,SAAWH,EAASkB,SAR/C,4BAgBA,wBACEI,QAAS,kBAAMb,EACbD,EAAOH,gBAAP,2BACSG,GADT,IACiBH,iBAAiB,IADlC,2BAESG,GAFT,IAEiBH,iBAAiB,MAEpCkB,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CACE,YAAahB,EAAOH,kBAX1B,sBAkBEG,EAAOL,QAAUK,EAAOH,kBACxB,wBACEiB,QAAS,kBAAMb,EAAU,CACvBN,OAAQH,EAASI,QACjBC,iBAAiB,KAEnBkB,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGX,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC1HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b9cce988.chunk.js","sourcesContent":["export enum SortType {\n  alphabet = 'alphabet',\n  length = 'length',\n  default = '',\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { FilterParams, SortType } from './types';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst sortByDefault: FilterParams = {\n  method: SortType.default,\n  isReversedOrder: false,\n};\n\nconst getPreparedGoods = (\n  list: string[],\n  { method, isReversedOrder }: FilterParams,\n) => {\n  const preparedGoods = [...list];\n\n  if (method) {\n    preparedGoods.sort((good1, good2) => {\n      switch (method) {\n        case (SortType.alphabet):\n          return good1.localeCompare(good2);\n\n        case (SortType.length):\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversedOrder) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(sortByDefault);\n  const goods = getPreparedGoods(goodsFromServer, sortBy);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortBy({ ...sortBy, method: SortType.alphabet })}\n          type=\"button\"\n          className={\n            classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': sortBy.method !== SortType.alphabet,\n              },\n            )\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortBy({ ...sortBy, method: SortType.length })}\n          type=\"button\"\n          className={\n            classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': sortBy.method !== SortType.length,\n              },\n            )\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setSortBy(\n            sortBy.isReversedOrder\n              ? { ...sortBy, isReversedOrder: false }\n              : { ...sortBy, isReversedOrder: true },\n          )}\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !sortBy.isReversedOrder,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortBy.method || sortBy.isReversedOrder) && (\n          <button\n            onClick={() => setSortBy({\n              method: SortType.default,\n              isReversedOrder: false,\n            })}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}